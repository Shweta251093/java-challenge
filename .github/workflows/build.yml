# This is a basic workflow to help you get started with Actions

name: build

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
    paths-ignore:
     - '.github'
  pull_request:
    branches: [ "main" ]
    paths-ignore:
     - '.github'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
#   cleanup-runs:
#     runs-on: ubuntu-latest
#     steps:
#     - name: Stop other workflows executing
#       uses: rokroskar/workflow-run-cleanup-action@master
#       env:
#         GITHUB_TOKEN: "${{. secrets.GITHUB_TOKEN }}"

  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it 
      - name: Checkout
        uses: actions/checkout@v3
        with: 
          featch-depth: 0
          
#       - name: JDK Setup
#         uses: actions/setup-java@v1
#         with: 
#           java-version: 11
      
#       - name: grant permission to gradlew
#         run: chmod +x gradlew
        
#       - name: gradle Cache
#         uses: actions/cache@v2
#         with:
#           path: |
#             ~/.gradle/caches
#             ~/.gradle/dependency-check-data
#             ~/.gradle/wrapper
#           key: ${{ runner.os }}-gradle-${{ hashFiles('build.gradle') }}
#           restore-keys: ${{ runner.os }}-gradle
          
#       - name: Gradle sonarqube execution
#         run: |
#           ./gradlew test dependencyCheckAnalyze sonarqube -i -s --profile \

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
